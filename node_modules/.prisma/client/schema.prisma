generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int     @id @default(autoincrement())
  email     String  @unique
  password  String
  firstname String?
  lastname  String?
  avatarUrl String?
  bio       String?
  role      Role    @default(USER)

  products  Product[]     @relation("ProductOwners")
  ideas     Idea[]
  ideaVotes IdeaVote[]
  comments  IdeaComment[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  lastLogin DateTime?
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  guid        String   @unique
  createdAt   DateTime @default(now())

  ownerId Int
  owner   User   @relation("ProductOwners", fields: [ownerId], references: [id], onDelete: Cascade)
  ideas   Idea[]
}

model Idea {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  status      String   @default("New")
  createdAt   DateTime @default(now())

  productId Int
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  userId Int?
  user   User? @relation(fields: [userId], references: [id], onDelete: Cascade)

  votes    IdeaVote[]
  comments IdeaComment[]
}

model IdeaVote {
  id     Int  @id @default(autoincrement())
  ideaId Int
  idea   Idea @relation(fields: [ideaId], references: [id], onDelete: Cascade)

  userId  Int?
  user    User?   @relation(fields: [userId], references: [id], onDelete: Cascade)
  guestId String?

  type      VoteType
  createdAt DateTime @default(now())

  @@unique([ideaId, userId])
  @@unique([ideaId, guestId])
}

model IdeaComment {
  id     Int  @id @default(autoincrement())
  ideaId Int
  idea   Idea @relation(fields: [ideaId], references: [id], onDelete: Cascade)

  userId Int?
  user   User? @relation(fields: [userId], references: [id], onDelete: Cascade)

  guestId   String?
  guestName String?
  content   String

  createdAt DateTime @default(now())
}

enum Role {
  USER
  MODERATOR
  ADMIN
}

enum VoteType {
  UP
  DOWN
}
